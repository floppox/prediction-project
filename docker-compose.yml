version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      XDEBUG_CONFIG: "remote_host=172.28.0.1 remote_enable=1 remote_autostart=off  remote_port=9000"
      PHP_IDE_CONFIG: "serverName=Docker"
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - prediction-network

  #Queue worker
  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: worker
    entrypoint: ["php",  "artisan", "queue:work"]
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
    networks:
      - prediction-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "${APP_PORT}:80"
      - "${APP_SSL_PORT}:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - prediction-network

  #MySQL Service
  db:
    image: mysql:8
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "${DB_PORT_EXTERNAL}:3306"
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql-files/
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - prediction-network

networks:
  prediction-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
